name: Release Creation

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Extract Version From Tag
        id: get_version
        uses: battila7/get-version-action@v2

      # Decide manifest channel:
      # - pre-release checkbox OR tag contains '-'  => tagged manifest
      # - otherwise => latest manifest
      - name: Set manifest URL for channel (stable vs prerelease)
        id: set_manifest
        run: |
          TAG="${{ github.event.release.tag_name }}"
          IS_PRE="${{ github.event.release.prerelease }}"
          if [[ "$IS_PRE" == "true" || "$TAG" == *"-"* ]]; then
            echo "manifest_url=https://github.com/${{ github.repository }}/releases/download/${TAG}/module.json" >> $GITHUB_OUTPUT
          else
            echo "manifest_url=https://github.com/${{ github.repository }}/releases/latest/download/module.json" >> $GITHUB_OUTPUT
          fi

      # Inject version/manifest/download into module.json for this release
      - name: Modify Module Manifest With Release-Specific Values
        id: sub_manifest_link_version
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          version: ${{ steps.get_version.outputs.version-without-v }}
          manifest: ${{ steps.set_manifest.outputs.manifest_url }}
          download: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/preload-tracker.zip

      # --- Package ----------------------------------------------------------
      - name: Create Module Archive
        run: |
          mkdir -p dist
          ZIPNAME="preload-tracker.zip"
          if [ -f LICENSE.md ]; then LIC="LICENSE.md"; else LIC="LICENSE"; fi
          # Include only the files/folders this repo actually has
          zip -r "dist/$ZIPNAME" \
            module.json README.md "$LIC" CHANGELOG.md \
            scripts/ lang/ \
            -x "**/.DS_Store" "**/Thumbs.db"

      # ---- Keep a Changelog integration -----------------------------------
      - uses: release-flow/keep-a-changelog-action@v3
        id: changelog
        with:
          command: query
          version: ${{ steps.get_version.outputs.version-without-v }}

      # ---- Create or Update GitHub Release --------------------------------
      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
          draft: ${{ github.event.release.draft }}
          prerelease: ${{ github.event.release.prerelease }}
          name: ${{ steps.get_version.outputs.version-without-v }}
          body: ${{ steps.changelog.outputs.release-notes }}
          artifacts: "module.json, dist/preload-tracker.zip"

      # ---- Publish to FoundryVTT Website ----------------------------------
      # Foundry expects the *tagged* manifest for this specific release
      - name: Publish Module to FoundryVTT Website
        id: publish-to-foundry-website
        if: ${{ ! github.event.release.prerelease }}
        uses: cs96and/FoundryVTT-release-package@v1
        with:
          package-token: ${{ secrets.FOUNDRY_RELEASE_TOKEN }}
          manifest-url: https://github.com/${{ github.repository }}/releases/download/${{ github.event.release.tag_name }}/module.json
